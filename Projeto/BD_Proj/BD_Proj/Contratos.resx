<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>