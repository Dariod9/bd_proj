<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>